version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: ergiva_postgres
    restart: always
    environment:
      POSTGRES_DB: ergiva_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database.sql:/docker-entrypoint-initdb.d/database.sql
    networks:
      - ergiva_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ergiva_backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ergiva_db
      DB_USER: postgres
      DB_PASSWORD: password
      FRONTEND_URL: http://localhost:3000
      JWT_SECRET: your-super-secret-jwt-key-here
      SESSION_SECRET: your-super-secret-session-key-here
      GOOGLE_CLIENT_ID: your-google-client-id
      GOOGLE_CLIENT_SECRET: your-google-client-secret
      GOOGLE_CALLBACK_URL: http://localhost:5000/api/auth/google/callback
      RAZORPAY_KEY_ID: your-razorpay-key-id
      RAZORPAY_KEY_SECRET: your-razorpay-key-secret
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: your-email@gmail.com
      EMAIL_PASS: your-app-password
    depends_on:
      - postgres
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - ergiva_network

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ergiva_frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
      NEXT_PUBLIC_GOOGLE_CLIENT_ID: your-google-client-id
      NEXT_PUBLIC_RAZORPAY_KEY_ID: your-razorpay-key-id
      NEXT_PUBLIC_WHATSAPP_NUMBER: +919211215116
    depends_on:
      - backend
    networks:
      - ergiva_network

  # Redis (for session storage and caching)
  redis:
    image: redis:7-alpine
    container_name: ergiva_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ergiva_network

  # Nginx (reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: ergiva_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - ergiva_network

volumes:
  postgres_data:
  redis_data:

networks:
  ergiva_network:
    driver: bridge